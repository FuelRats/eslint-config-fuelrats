/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-workspace-tools-extended",
factory: function (require) {
var plugin;(()=>{"use strict";var e={d:(t,r)=>{for(var a in r)e.o(r,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>d});const r=require("@yarnpkg/cli"),a=require("@yarnpkg/core"),o=require("clipanion");function n(e=[]){return e.filter(e=>"string"==typeof e)}var s=function(e,t,r,a){var o,n=arguments.length,s=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,a);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(s=(n<3?o(s):n>3?o(t,r,s):o(t,r))||s);return n>3&&s&&Object.defineProperty(t,r,s),s};const i=(e=[])=>n(["npm","publish",...e]);class c extends o.Command{constructor(){super(...arguments),this.tolerateRepublish=!1,this.canary=!1,this.all=!1}async execute(){const e=await a.Configuration.find(this.context.cwd,this.context.plugins),{project:t,workspace:n}=await a.Project.find(e,this.context.cwd);let s;if(this.all)s=t.workspaces.reduce((e,t)=>(t.manifest.private||e.push(t),e),[]);else if(this.workspaces.length>0){if(!n)throw new r.WorkspaceRequiredError(t.cwd,this.context.cwd);s=this.workspaces.map(r=>{const n=a.structUtils.parseIdent(r),s=t.getWorkspaceByIdent(n);if(s.manifest.private)throw new o.UsageError(`Workspace ${a.structUtils.prettyIdent(e,n)} is private and cannot be published. Aborting...`);return s})}if(!s||0===s.length)throw new o.UsageError("No list of workspaces were provided. Please supply at least one valid package name or '-A,--all'");for(const e of s)await this.cli.run(i([this.tagArg,this.tolerateRepublishArg]),{cwd:e.cwd})}get tagArg(){return this.canary?"--tag=canary":this.tag?"--tag="+this.tag:null}get tolerateRepublishArg(){return this.tolerateRepublish?"--tolerate-republish":null}}c.usage=o.Command.Usage({category:"Workspace-related commands",description:"Publish a list of workspaces in the project.",details:"\n      This command will publish a list of packages, or optionally, all packages of a workspace.\n\n      Use the `-A,--all` flag to publish all public packages in the project.\n    "}),s([o.Command.String("--tag",{description:"The tag on the registry that the package should be attached to. '-C,--canary' will overwrite this parameter."})],c.prototype,"tag",void 0),s([o.Command.Boolean("--tolerate-republish",{description:"Warn and exit when republishing an already existing version of a package."})],c.prototype,"tolerateRepublish",void 0),s([o.Command.Boolean("-C,--canary",{description:"Tag the release as 'canary'. The standard pre-release tag for @FuelRats projects."})],c.prototype,"canary",void 0),s([o.Command.Boolean("-A,--all",{description:"Publish all public repositories in the current project."})],c.prototype,"all",void 0),s([o.Command.Rest()],c.prototype,"workspaces",void 0),s([o.Command.Path("workspaces","release")],c.prototype,"execute",null);var l=function(e,t,r,a){var o,n=arguments.length,s=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,a);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(s=(n<3?o(s):n>3?o(t,r,s):o(t,r))||s);return n>3&&s&&Object.defineProperty(t,r,s),s};class p extends o.Command{constructor(){super(...arguments),this.canary=!1}async execute(){const e=await a.Configuration.find(this.context.cwd,this.context.plugins);!function(e,t){t.forEach(t=>{const r="@yarnpkg/plugin-"+t;if(!e.plugins.has(r)){const n=a.structUtils.prettyIdent(e,a.structUtils.parseIdent(r)),s=a.structUtils.prettyReference(e,"yarn plugin import "+t);throw new o.UsageError(`${n} is a required plugin. Please import it by using '${s}'`)}})}(e,["workspace-tools","version"]);const{project:t,workspace:s}=await a.Project.find(e,this.context.cwd);if(!s)throw new r.WorkspaceRequiredError(t.cwd,this.context.cwd);const i=((e=[])=>n(["version","--deferred",...e]))([this.strategy[0]]);await this.cli.run(((e=[])=>n(["workspaces","foreach",...e]))(i)),await this.cli.run(i),await this.cli.run(((e=[])=>n(["version","apply","--all",...e]))([this.tagArg]))}get tagArg(){return this.canary?"--prerelease=canary.%n":this.tag?`--prerelease=${this.tag}.%n`:null}}p.usage=o.Command.Usage({category:"Workspace-related commands",description:"Update the project-wide fixed semver.",details:"\n      This command will bump the version number of all workspaces in the project, then the project package itself.\n\n      Use the `-C,--canary` flag to set the version to a canary release.\n    ",examples:[["Bump the minor semver project-wide","yarn workspaces version minor"],["Bump the project-wide semver to a new minor-ver pre-release","yarn workspaces version minor --canary"]]}),l([o.Command.String("--tag",{description:"Tag the release with the given tag. '-C,--canary' will overwrite this parameter."})],p.prototype,"tag",void 0),l([o.Command.Boolean("-C,--canary",{description:"Tag the release as 'canary'. The standard pre-release tag for @FuelRats projects."})],p.prototype,"canary",void 0),l([o.Command.Proxy({required:1})],p.prototype,"strategy",void 0),l([o.Command.Path("workspaces","version")],p.prototype,"execute",null);const d={commands:[p,c]};plugin=t})();
return plugin;
}
};